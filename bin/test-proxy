#!/usr/bin/env bash
# shellcheck disable=SC2155

readonly CURL=(curl --fail --connect-timeout 3 --max-time 10)
readonly DELAY_URL=http://connectivitycheck.gstatic.com/generate_204
readonly SPEED_URL=https://raw.githubusercontent.com/yourkin/fileupload-fastapi/a85a697cab2f887780b3278059a0dd52847d80f3/tests/data/test-10mb.bin
readonly INFO_URL=http://ipinfo.io

readonly RED=$(tput setaf 1) GREEN=$(tput setaf 2) YELLOW=$(tput setaf 3)
readonly BLUE=$(tput setaf 4) MAGENTA=$(tput setaf 5) CYAN=$(tput setaf 6)
readonly BOLD=$(tput bold) RESET=$(tput sgr0)

readonly -A _FLAGS=(
    [CN]=ðŸ‡¨ðŸ‡³
    [TW]=ðŸ‡¨ðŸ‡³
    [HK]=ðŸ‡­ðŸ‡°
    [JP]=ðŸ‡¯ðŸ‡µ
    [SG]=ðŸ‡¸ðŸ‡¬
    [VN]=ðŸ‡»ðŸ‡³
    [US]=ðŸ‡ºðŸ‡¸
    [GB]=ðŸ‡¬ðŸ‡§
    [DE]=ðŸ‡©ðŸ‡ª
    [FI]=ðŸ‡«ðŸ‡®
    [LU]=ðŸ‡±ðŸ‡º
    [ID]=ðŸ‡®ðŸ‡©
    [MY]=ðŸ‡²ðŸ‡¾
)

source "$ENV/lib/bash/json.sh"

readonly FLAGS=$(as-json _FLAGS)

source "$ENV/lib/bash/fs.sh"

TIMEFORMAT=%R
benchmark-delay() {
    (time proxy "$1" "${CURL[@]}" -s "$DELAY_URL") 2>&1
}

create-temp-file TEMP
benchmark-speed-once() {
    # shellcheck disable=SC2153
    proxy "$1" "${CURL[@]}" "$SPEED_URL" 2>&1 >/dev/null | tee "$TEMP"
    SPEED=$(rg -v '^curl:' "$TEMP" | sed -En '$s/^.*\r\s*\S+\s+\S+\s+\S+\s+\S+\s+\S+\s+\S+\s+(\S+).*$/\1/p')
}

kilo() {
    local n=$1
    if [[ -z $n ]]; then
        n=0
    elif [[ $n == *k ]]; then
        n=${n/%k/}
    else
        n=$((n / 1024))
    fi
    echo "$n"
}

delay-color() {
    if (($(echo "$1 < 0.5" | bc) == 1)); then
        echo "$GREEN"
    elif (($(echo "$1 < 1" | bc) == 1)); then
        echo "$YELLOW"
    else
        echo "$MAGENTA"
    fi
}

speed-color() {
    if (($1 >= 2000)); then
        echo "$GREEN"
    elif (($1 >= 1000)); then
        echo "$YELLOW"
    else
        echo "$MAGENTA"
    fi
}

benchmark-speed() {
    local proxy=$1
    local total=$2
    if [[ -z "$total" ]]; then
        total=1
    fi

    local sum=0 i
    for ((i = 0; i < total; i += 1)); do
        benchmark-speed-once "$proxy"
        if [[ $SPEED = 0 ]]; then
            return
        fi
        sum=$((sum + $(kilo "$SPEED")))
    done

    SPEED=$((sum / i))
}

get-location() {
    local proxy=$1
    local location
    if location=$(proxy "$proxy" "${CURL[@]}" -s "$INFO_URL"); then
        echo "$location" | jq -r --argjson flags "$FLAGS" \
            "(\$flags[.country] // \"$RED$BOLD\(.country)$RESET\") + \" \(.region)\" +
            if .region != .city then \", \(.city)\" else \"\" end"
    else
        return $?
    fi
}

benchmark-proxy() {
    local delay=$1
    local proxy=$2

    benchmark-speed "$proxy" "$3"
    if [[ $SPEED = 0 ]]; then
        echo "${RED}Error$RESET: Network blocked"
        return
    fi

    local color
    color=$(delay-color "$delay")
    echo "${BLUE}Delay$RESET: $color${delay}s$RESET"

    color=$(speed-color "$SPEED")
    echo "${BLUE}Speed$RESET: $color${SPEED}k/s$RESET"

    local location
    if location=$(get-location "$proxy"); then
        echo "${BLUE}Locat$RESET: $location"
    fi
}

if (($# == 0)); then
    LABEL="DEFAULT"
    PROXY=""
elif (($# == 1)); then
    PROXY="$1"
    if [[ $PROXY = 0 ]]; then
        LABEL=DIRECT
    else
        LABEL=$PROXY
    fi
elif (($# >= 2)); then
    LABEL="$1"
    PROXY="$2"
    TOTAL="$3"
fi

echo "--- --- --- $CYAN$LABEL$RESET --- --- ---"
if DELAY=$(benchmark-delay "$PROXY"); then
    benchmark-proxy "$DELAY" "$PROXY" "$TOTAL"
else
    echo "${RED}Error$RESET: Network blocked"
fi
