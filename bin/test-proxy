#!/usr/bin/env bash

TEMP=/tmp/$(basename "$0").$$.tmp

kilo() {
	N=$1
	if [[ -z $N ]]; then
		N=0
	elif [[ $N == *k ]]; then
		N=${N/%k/}
	else
		N=$((N / 1024))
	fi
	echo $N
}

once() {
	proxy "$1" curl --connect-timeout 3 -m 10 -d 'special=1&tt=1&st=st&nfw=1&s=10MB' https://sf.testmy.net/download 2>&1 >/dev/null | tee "$TEMP"
	TIME=$(grep -v '^curl:' "$TEMP" | tail -1 | sed 's/.*\r//' | awk '{print $7}')
	rm -f "$TEMP"
}

test_one() {
	TOTAL=$2
	if [[ -z "$TOTAL" ]]; then
		TOTAL=1
	fi

	SUM=0
	I=0
	while [[ $I -lt $TOTAL ]]; do
		once "$1"
		if [[ $TIME = 0 ]]; then
			echo "Error: Network blocked"
			return
		fi
		SUM=$((SUM + $(kilo "$TIME")))
		I=$((I + 1))
	done

	AVG=$((SUM / I))
	echo "Average Speed: ${AVG} k/s"
}

test_port() {
	if [[ "$1" == 0 ]]; then
		DISPLAY="DIRECT"
	else
		DISPLAY="$1"
	fi
	if [[ -n "$2" ]]; then
		DISPLAY="$DISPLAY aka $2"
	fi
	echo "-------- $DISPLAY --------"
	test_one "$1"
}

test_node() {
	jq -r '.[] | .name + "\t" + .uri + "\t" + (.port | tostring)' "$1" | \
	while IFS=$'\t' read -r -a NODE; do
		local NAME=${NODE[0]}
		local URI=${NODE[1]}
		local PORT=${NODE[2]}
		if [[ $PORT =~ ^[1-9][0-9]*$ ]]; then
			test_port "$PORT" "$NAME"
		else
			test_port "$URI" "$NAME"
		fi
	done
	test_port 10000 Auto
	test_port 0
}

if [[ $1 == *.json ]]; then
	test_node "$1"

elif [[ $# -gt 0 ]]; then
	while [[ $# -gt 0 ]]; do
		test_port "$1"
		shift
	done

else
	test_node "$ENV/package/gost/node.json"
fi
