#!/usr/bin/env bash

TEMP=/tmp/$(basename "$0").$$.tmp

kilo() {
	N=$1
	if [[ -z $N ]]; then
		N=0
	elif [[ $N == *k ]]; then
		N=${N/%k/}
	else
		N=$((N / 1024))
	fi
	echo $N
}

once() {
	proxy "$1" curl --connect-timeout 5 -m 30 -d 'special=1&tt=1&st=st&nfw=1&s=10MB' https://sf.testmy.net/download 2>&1 >/dev/null | tee "$TEMP"
	TIME=$(grep -v '^curl:' "$TEMP" | tail -1 | sed 's/.*\r//' | awk '{print $7}')
	rm -f "$TEMP"
}

test_one() {
	TOTAL=$2
	if [[ -z "$TOTAL" ]]; then
		TOTAL=1
	fi

	SUM=0
	I=0
	while [[ $I -lt $TOTAL ]]; do
		once "$1"
		if [[ $TIME = 0 ]]; then
			echo "Error: Network blocked"
			return
		fi
		SUM=$((SUM + $(kilo "$TIME")))
		I=$((I + 1))
	done

	AVG=$((SUM / I))
	echo "Average Speed: ${AVG} k/s"
}

test_port() {
	if [[ "$1" == 0 ]]; then
		DISPLAY="DIRECT"
	else
		DISPLAY="$1"
	fi
	if [[ -n "$2" ]]; then
		DISPLAY="$DISPLAY aka $2"
	fi
	echo "-------- $DISPLAY --------"
	test_one "$1"
}

test_http() {
	CONF=/usr/local/etc/stunnel/stunnel.conf
	if [[ -r $CONF ]]; then
		AKA=$(grep -A2 'accept\s*=\s*9900' $CONF | sed -En 's/^connect\s*=\s*(.*)/\1/p')
		if [[ $AKA = aio* ]]; then
			AKA=$(echo "$AKA" | sed -En 's/aio([0-9]+).*/\1/p')
			AKA=$(printf "99%02d" "$AKA")
		fi
	fi
	test_port 9900 "$AKA"
	echo
#	for PORT in {9901..9905}; do
#		test_port $PORT
#		PORT=$((PORT + 1))
#		echo
#	done
	for PORT in {9906..9907}; do
		test_port $PORT
		PORT=$((PORT + 1))
		echo
	done
#	for PORT in {9908..9909}; do
#		test_port $PORT
#		PORT=$((PORT + 1))
#		echo
#	done
	for PORT in {9910..9914}; do
		test_port $PORT
		PORT=$((PORT + 1))
		echo
	done
	test_port 9990 9900
	echo
	test_port 9988 https://moonfruit.top:8443
	echo
	test_port 9998 ssh://moonfruit.top
	echo
#	test_port 9999 sps://moonfruit.top
#	echo
	test_port gingkoo http://10.1.2.12:8118
	echo
	test_port 0
}

test_socks() {
	test_port 1080
	echo

	for PORT in {9801..9814}; do
		test_port $PORT
		PORT=$((PORT + 1))
		echo
	done

	test_port 0
}

if [[ $1 == http ]]; then
	test_http

elif [[ $1 == socks ]]; then
	test_socks

elif [[ $# -gt 0 ]]; then
	while [[ $# -gt 0 ]]; do
		test_port "$1"
		shift
	done

else
	test_http
fi
